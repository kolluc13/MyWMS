/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package artikelVerwalter.gui;

import artikelVerwalter.data.Artikel;
import artikelVerwalter.model.ArtikelstammdatenModel;
import eanCheck.bl.BarcodeCheckDigitCalculator;
import eanCheck.enumeration.CodeType;
import java.awt.Frame;
import javax.swing.JOptionPane;

/**
 *
 * @author lukik
 */
public class ArtikelDlg extends javax.swing.JDialog {

    /**
     * Creates new form ArtikelDlg
     */
    public ArtikelDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initCombobox();
    }
    private boolean ok = false;
    private Artikel artikel;

    private String ean, bezeichnung, einheit;
    private double menge, gewicht;
    private BarcodeCheckDigitCalculator calc;

    public ArtikelDlg(Frame parent, boolean modal, Artikel artikel) {
        super(parent, modal);
        initComponents();
        initCombobox();
        tfEan.setText(artikel.getEan());
        tfBezeichnung.setText(artikel.getBezeichnung());
        tfGewicht.setText("" + artikel.getGewicht());
        tfMenge.setText("" + artikel.getMenge());
    }

    private void initCombobox() {
        String[] einheit = {"Liter","Kilo","m^2","Stück"};  
        for (String help : einheit){
            cbEinheit.addItem(help);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        onOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfEan = new javax.swing.JTextField();
        onCheckEan = new javax.swing.JButton();
        onGeneratePruefziffer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfBezeichnung = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfMenge = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfGewicht = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbEinheit = new javax.swing.JComboBox<>();
        onAbbrechen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        onOk.setText("OK");
        onOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(onOk, gridBagConstraints);

        jLabel1.setText("EAN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(tfEan, gridBagConstraints);

        onCheckEan.setText("Check EAN");
        onCheckEan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCheckEanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(onCheckEan, gridBagConstraints);

        onGeneratePruefziffer.setText("Generate Prüfziffer");
        onGeneratePruefziffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onGeneratePruefzifferActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(onGeneratePruefziffer, gridBagConstraints);

        jLabel2.setText("Bezeichnung");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(tfBezeichnung, gridBagConstraints);

        jLabel3.setText("Menge");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(tfMenge, gridBagConstraints);

        jLabel4.setText("Gewicht");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(tfGewicht, gridBagConstraints);

        jLabel5.setText("Einheit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(cbEinheit, gridBagConstraints);

        onAbbrechen.setText("Abbrechen");
        onAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAbbrechenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(onAbbrechen, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onCheckEanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCheckEanActionPerformed
        try {
            ean = tfEan.getText();
            int type = ean.length();
            CodeType code = null;
            switch (type) {
                case 8:
                    code = CodeType.EAN_8;
                    break;
                case 16:
                    code = CodeType.EAN_16;
                    break;
                default:
                    throw new Exception();
            }
            calc = new BarcodeCheckDigitCalculator(code);
            if (calc.verifyCodeCheckDigitIsOk(ean) == true) {
                JOptionPane.showMessageDialog(this, "Code is good");
            } else {
                JOptionPane.showMessageDialog(this, "Code is not good, please check your code");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Länge des EANs beachten:"+e.getMessage());
        }
    }//GEN-LAST:event_onCheckEanActionPerformed

    private void onGeneratePruefzifferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onGeneratePruefzifferActionPerformed
        try {
            ean = tfEan.getText();
            int type = ean.length();
            CodeType code = null;
            
            switch (type) {
                case 7:
                    code = CodeType.EAN_8;
                    break;
                case 15:
                    code = CodeType.EAN_16;
                    break;
                default:
                    throw new Exception();
            }

            calc = new BarcodeCheckDigitCalculator(code);
            String ean_withoutcheck = tfEan.getText();
            String ean_withcheck = calc.addCheckDigitToCode(ean_withoutcheck);
            tfEan.setText(ean_withcheck);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Es dürfen maximal 7 bzw 15 Zahlen drinnen stehen damit die Prüfziffern berechnet werden kann:"+e.getMessage());
        }
    }//GEN-LAST:event_onGeneratePruefzifferActionPerformed

    private void onOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOkActionPerformed
        try {
            ean = tfEan.getText();
            bezeichnung = tfBezeichnung.getText();
            menge = Double.parseDouble(tfMenge.getText());
            gewicht = Double.parseDouble(tfGewicht.getText());
            einheit = cbEinheit.getItemAt(cbEinheit.getSelectedIndex());
            System.out.println(einheit);
            artikel = new Artikel(ean, bezeichnung, menge, gewicht, einheit);
            ok = true;
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_onOkActionPerformed

    private void onAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAbbrechenActionPerformed
        this.dispose();
    }//GEN-LAST:event_onAbbrechenActionPerformed

    public Artikel getArtikel() {
        return artikel;
    }

    public boolean isOk() {
        return ok;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArtikelDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArtikelDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArtikelDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArtikelDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ArtikelDlg dialog = new ArtikelDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbEinheit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton onAbbrechen;
    private javax.swing.JButton onCheckEan;
    private javax.swing.JButton onGeneratePruefziffer;
    private javax.swing.JButton onOk;
    private javax.swing.JTextField tfBezeichnung;
    private javax.swing.JTextField tfEan;
    private javax.swing.JTextField tfGewicht;
    private javax.swing.JTextField tfMenge;
    // End of variables declaration//GEN-END:variables
}
